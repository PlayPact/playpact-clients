/*
 * PlayPact API
 *
 * The API for PlayPact.
 *
 * The version of the OpenAPI document: v1
 * Contact: contact@playpact.com
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */

using System;
using System.IO;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.Reflection;
using RestSharp;
using Xunit;

using PlayPact.OpenAPI.Client;
using PlayPact.OpenAPI.Api;

namespace PlayPact.OpenAPI.Test.Api
{
    /// <summary>
    ///  Class for testing DashboardApi
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by OpenAPI Generator (https://openapi-generator.tech).
    /// Please update the test case below to test the API endpoint.
    /// </remarks>
    public class DashboardApiTests : IDisposable
    {
        private DashboardApi instance;

        public DashboardApiTests()
        {
            instance = new DashboardApi();
        }

        public void Dispose()
        {
            // Cleanup when everything is done.
        }

        /// <summary>
        /// Test an instance of DashboardApi
        /// </summary>
        [Fact]
        public void InstanceTest()
        {
            // TODO uncomment below to test 'IsType' DashboardApi
            //Assert.IsType<DashboardApi>(instance);
        }

        /// <summary>
        /// Test GetActiveReports
        /// </summary>
        [Fact]
        public void GetActiveReportsTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //var response = instance.GetActiveReports();
            //Assert.IsType<int>(response);
        }

        /// <summary>
        /// Test GetCompletedReports
        /// </summary>
        [Fact]
        public void GetCompletedReportsTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //var response = instance.GetCompletedReports();
            //Assert.IsType<int>(response);
        }

        /// <summary>
        /// Test GetRegisteredServers
        /// </summary>
        [Fact]
        public void GetRegisteredServersTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //var response = instance.GetRegisteredServers();
            //Assert.IsType<int>(response);
        }

        /// <summary>
        /// Test GetUserCount
        /// </summary>
        [Fact]
        public void GetUserCountTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //var response = instance.GetUserCount();
            //Assert.IsType<int>(response);
        }
    }
}
