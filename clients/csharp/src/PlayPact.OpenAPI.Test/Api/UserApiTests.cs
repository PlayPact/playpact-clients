/*
 * PlayPact API
 *
 * The API for PlayPact.
 *
 * The version of the OpenAPI document: v1
 * Contact: contact@playpact.com
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */

using System;
using System.IO;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.Reflection;
using RestSharp;
using Xunit;

using PlayPact.OpenAPI.Client;
using PlayPact.OpenAPI.Api;
// uncomment below to import models
//using PlayPact.OpenAPI.Model;

namespace PlayPact.OpenAPI.Test.Api
{
    /// <summary>
    ///  Class for testing UserApi
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by OpenAPI Generator (https://openapi-generator.tech).
    /// Please update the test case below to test the API endpoint.
    /// </remarks>
    public class UserApiTests : IDisposable
    {
        private UserApi instance;

        public UserApiTests()
        {
            instance = new UserApi();
        }

        public void Dispose()
        {
            // Cleanup when everything is done.
        }

        /// <summary>
        /// Test an instance of UserApi
        /// </summary>
        [Fact]
        public void InstanceTest()
        {
            // TODO uncomment below to test 'IsType' UserApi
            //Assert.IsType<UserApi>(instance);
        }

        /// <summary>
        /// Test GetPactPointHistory
        /// </summary>
        [Fact]
        public void GetPactPointHistoryTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //Guid playPactUserId = null;
            //DateTime? fromDate = null;
            //DateTime? toDate = null;
            //var response = instance.GetPactPointHistory(playPactUserId, fromDate, toDate);
            //Assert.IsType<List<PactPointHistoryDto>>(response);
        }

        /// <summary>
        /// Test GetPactPoints
        /// </summary>
        [Fact]
        public void GetPactPointsTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //Guid playPactUserId = null;
            //var response = instance.GetPactPoints(playPactUserId);
            //Assert.IsType<int>(response);
        }

        /// <summary>
        /// Test GetPlatformIdentifiers
        /// </summary>
        [Fact]
        public void GetPlatformIdentifiersTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //Guid playPactUserId = null;
            //var response = instance.GetPlatformIdentifiers(playPactUserId);
            //Assert.IsType<PlatformIdentifierDto>(response);
        }

        /// <summary>
        /// Test GetUser
        /// </summary>
        [Fact]
        public void GetUserTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //Guid playPactUserId = null;
            //var response = instance.GetUser(playPactUserId);
            //Assert.IsType<UserDto>(response);
        }

        /// <summary>
        /// Test GetUsers
        /// </summary>
        [Fact]
        public void GetUsersTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //var response = instance.GetUsers();
            //Assert.IsType<List<UserListDto>>(response);
        }

        /// <summary>
        /// Test GetUsersOnServer
        /// </summary>
        [Fact]
        public void GetUsersOnServerTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //Guid playPactServerId = null;
            //var response = instance.GetUsersOnServer(playPactServerId);
            //Assert.IsType<List<UserListDto>>(response);
        }

        /// <summary>
        /// Test RegisterPlayPactUser
        /// </summary>
        [Fact]
        public void RegisterPlayPactUserTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string username = null;
            //string supabaseUUID = null;
            //instance.RegisterPlayPactUser(username, supabaseUUID);
        }

        /// <summary>
        /// Test UpdatesAUsersPlatformIdentifiers
        /// </summary>
        [Fact]
        public void UpdatesAUsersPlatformIdentifiersTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //Guid playPactUserId = null;
            //PlatformIdentifierDto platformIdentifierDto = null;
            //instance.UpdatesAUsersPlatformIdentifiers(playPactUserId, platformIdentifierDto);
        }

        /// <summary>
        /// Test UserBannedFromServer
        /// </summary>
        [Fact]
        public void UserBannedFromServerTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //instance.UserBannedFromServer();
        }

        /// <summary>
        /// Test UserChallengesServerLogin
        /// </summary>
        [Fact]
        public void UserChallengesServerLoginTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //PlatformIdentifierEnumDto? platform = null;
            //ServerChallengeDto serverChallengeDto = null;
            //var response = instance.UserChallengesServerLogin(platform, serverChallengeDto);
            //Assert.IsType<bool>(response);
        }

        /// <summary>
        /// Test UserJoinedServer
        /// </summary>
        [Fact]
        public void UserJoinedServerTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //instance.UserJoinedServer();
        }

        /// <summary>
        /// Test UserKickedFromServer
        /// </summary>
        [Fact]
        public void UserKickedFromServerTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //instance.UserKickedFromServer();
        }

        /// <summary>
        /// Test UserLeftServer
        /// </summary>
        [Fact]
        public void UserLeftServerTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //instance.UserLeftServer();
        }
    }
}
