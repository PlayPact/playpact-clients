/*
 * PlayPact API
 *
 * The API for PlayPact.
 *
 * The version of the OpenAPI document: v1
 * Contact: contact@playpact.com
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */

using System;
using System.IO;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.Reflection;
using RestSharp;
using Xunit;

using PlayPact.OpenAPI.Client;
using PlayPact.OpenAPI.Api;
// uncomment below to import models
//using PlayPact.OpenAPI.Model;

namespace PlayPact.OpenAPI.Test.Api
{
    /// <summary>
    ///  Class for testing ObjectionApi
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by OpenAPI Generator (https://openapi-generator.tech).
    /// Please update the test case below to test the API endpoint.
    /// </remarks>
    public class ObjectionApiTests : IDisposable
    {
        private ObjectionApi instance;

        public ObjectionApiTests()
        {
            instance = new ObjectionApi();
        }

        public void Dispose()
        {
            // Cleanup when everything is done.
        }

        /// <summary>
        /// Test an instance of ObjectionApi
        /// </summary>
        [Fact]
        public void InstanceTest()
        {
            // TODO uncomment below to test 'IsType' ObjectionApi
            //Assert.IsType<ObjectionApi>(instance);
        }

        /// <summary>
        /// Test GetMyObjection
        /// </summary>
        [Fact]
        public void GetMyObjectionTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //Guid playPactReportId = null;
            //Guid playPactUserId = null;
            //var response = instance.GetMyObjection(playPactReportId, playPactUserId);
            //Assert.IsType<ObjectionDto>(response);
        }

        /// <summary>
        /// Test GetObjection
        /// </summary>
        [Fact]
        public void GetObjectionTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //Guid playPactReportId = null;
            //Guid playPactUserId = null;
            //var response = instance.GetObjection(playPactReportId, playPactUserId);
            //Assert.IsType<ObjectionDto>(response);
        }

        /// <summary>
        /// Test UpdateMyObjection
        /// </summary>
        [Fact]
        public void UpdateMyObjectionTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //Guid playPactReportId = null;
            //Guid playPactUserId = null;
            //ObjectionDto objectionDto = null;
            //instance.UpdateMyObjection(playPactReportId, playPactUserId, objectionDto);
        }
    }
}
