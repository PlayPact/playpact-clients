/*
 * PlayPact API
 *
 * The API for PlayPact.
 *
 * The version of the OpenAPI document: v1
 * Contact: contact@playpact.com
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using System.ComponentModel.DataAnnotations;
using OpenAPIDateConverter = Org.OpenAPITools.Client.OpenAPIDateConverter;

namespace Org.OpenAPITools.Model
{
    /// <summary>
    /// PactPointHistoryDto
    /// </summary>
    [DataContract(Name = "PactPointHistoryDto")]
    public partial class PactPointHistoryDto : IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="PactPointHistoryDto" /> class.
        /// </summary>
        /// <param name="pactPoints">pactPoints.</param>
        /// <param name="date">date.</param>
        /// <param name="reason">reason.</param>
        public PactPointHistoryDto(int pactPoints = default(int), DateTime date = default(DateTime), string reason = default(string))
        {
            this.PactPoints = pactPoints;
            this.Date = date;
            this.Reason = reason;
        }

        /// <summary>
        /// Gets or Sets PactPoints
        /// </summary>
        [DataMember(Name = "pactPoints", EmitDefaultValue = false)]
        public int PactPoints { get; set; }

        /// <summary>
        /// Gets or Sets Date
        /// </summary>
        [DataMember(Name = "date", EmitDefaultValue = false)]
        public DateTime Date { get; set; }

        /// <summary>
        /// Gets or Sets Reason
        /// </summary>
        [DataMember(Name = "reason", EmitDefaultValue = true)]
        public string Reason { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            StringBuilder sb = new StringBuilder();
            sb.Append("class PactPointHistoryDto {\n");
            sb.Append("  PactPoints: ").Append(PactPoints).Append("\n");
            sb.Append("  Date: ").Append(Date).Append("\n");
            sb.Append("  Reason: ").Append(Reason).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
