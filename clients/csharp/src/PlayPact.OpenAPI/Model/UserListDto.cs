/*
 * PlayPact API
 *
 * The API for PlayPact.
 *
 * The version of the OpenAPI document: v1
 * Contact: contact@playpact.com
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using System.ComponentModel.DataAnnotations;
using OpenAPIDateConverter = PlayPact.OpenAPI.Client.OpenAPIDateConverter;

namespace PlayPact.OpenAPI.Model
{
    /// <summary>
    /// UserListDto
    /// </summary>
    [DataContract(Name = "UserListDto")]
    public partial class UserListDto : IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="UserListDto" /> class.
        /// </summary>
        /// <param name="playPactUserId">playPactUserId.</param>
        /// <param name="username">username.</param>
        public UserListDto(Guid playPactUserId = default(Guid), string username = default(string))
        {
            this.PlayPactUserId = playPactUserId;
            this.Username = username;
        }

        /// <summary>
        /// Gets or Sets PlayPactUserId
        /// </summary>
        [DataMember(Name = "playPactUserId", EmitDefaultValue = false)]
        public Guid PlayPactUserId { get; set; }

        /// <summary>
        /// Gets or Sets Username
        /// </summary>
        [DataMember(Name = "username", EmitDefaultValue = true)]
        public string Username { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            StringBuilder sb = new StringBuilder();
            sb.Append("class UserListDto {\n");
            sb.Append("  PlayPactUserId: ").Append(PlayPactUserId).Append("\n");
            sb.Append("  Username: ").Append(Username).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
