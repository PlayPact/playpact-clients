/*
 * PlayPact API
 *
 * The API for PlayPact.
 *
 * The version of the OpenAPI document: v1
 * Contact: contact@playpact.com
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using System.ComponentModel.DataAnnotations;
using OpenAPIDateConverter = PlayPact.OpenAPI.Client.OpenAPIDateConverter;

namespace PlayPact.OpenAPI.Model
{
    /// <summary>
    /// RuleDto
    /// </summary>
    [DataContract(Name = "RuleDto")]
    public partial class RuleDto : IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="RuleDto" /> class.
        /// </summary>
        /// <param name="playPactRuleId">playPactRuleId.</param>
        /// <param name="description">description.</param>
        /// <param name="penalty">penalty.</param>
        public RuleDto(Guid playPactRuleId = default(Guid), string description = default(string), int penalty = default(int))
        {
            this.PlayPactRuleId = playPactRuleId;
            this.Description = description;
            this.Penalty = penalty;
        }

        /// <summary>
        /// Gets or Sets PlayPactRuleId
        /// </summary>
        [DataMember(Name = "playPactRuleId", EmitDefaultValue = false)]
        public Guid PlayPactRuleId { get; set; }

        /// <summary>
        /// Gets or Sets Description
        /// </summary>
        [DataMember(Name = "description", EmitDefaultValue = true)]
        public string Description { get; set; }

        /// <summary>
        /// Gets or Sets Penalty
        /// </summary>
        [DataMember(Name = "penalty", EmitDefaultValue = false)]
        public int Penalty { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            StringBuilder sb = new StringBuilder();
            sb.Append("class RuleDto {\n");
            sb.Append("  PlayPactRuleId: ").Append(PlayPactRuleId).Append("\n");
            sb.Append("  Description: ").Append(Description).Append("\n");
            sb.Append("  Penalty: ").Append(Penalty).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
