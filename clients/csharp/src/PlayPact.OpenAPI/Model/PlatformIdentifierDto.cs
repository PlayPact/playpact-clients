/*
 * PlayPact API
 *
 * The API for PlayPact.
 *
 * The version of the OpenAPI document: v1
 * Contact: contact@playpact.com
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using System.ComponentModel.DataAnnotations;
using OpenAPIDateConverter = PlayPact.OpenAPI.Client.OpenAPIDateConverter;

namespace PlayPact.OpenAPI.Model
{
    /// <summary>
    /// PlatformIdentifierDto
    /// </summary>
    [DataContract(Name = "PlatformIdentifierDto")]
    public partial class PlatformIdentifierDto : IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="PlatformIdentifierDto" /> class.
        /// </summary>
        /// <param name="steamId">steamId.</param>
        /// <param name="minecraftId">minecraftId.</param>
        /// <param name="rockstarId">rockstarId.</param>
        /// <param name="epicGamesId">epicGamesId.</param>
        public PlatformIdentifierDto(string steamId = default(string), string minecraftId = default(string), string rockstarId = default(string), string epicGamesId = default(string))
        {
            this.SteamId = steamId;
            this.MinecraftId = minecraftId;
            this.RockstarId = rockstarId;
            this.EpicGamesId = epicGamesId;
        }

        /// <summary>
        /// Gets or Sets SteamId
        /// </summary>
        [DataMember(Name = "steamId", EmitDefaultValue = true)]
        public string SteamId { get; set; }

        /// <summary>
        /// Gets or Sets MinecraftId
        /// </summary>
        [DataMember(Name = "minecraftId", EmitDefaultValue = true)]
        public string MinecraftId { get; set; }

        /// <summary>
        /// Gets or Sets RockstarId
        /// </summary>
        [DataMember(Name = "rockstarId", EmitDefaultValue = true)]
        public string RockstarId { get; set; }

        /// <summary>
        /// Gets or Sets EpicGamesId
        /// </summary>
        [DataMember(Name = "epicGamesId", EmitDefaultValue = true)]
        public string EpicGamesId { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            StringBuilder sb = new StringBuilder();
            sb.Append("class PlatformIdentifierDto {\n");
            sb.Append("  SteamId: ").Append(SteamId).Append("\n");
            sb.Append("  MinecraftId: ").Append(MinecraftId).Append("\n");
            sb.Append("  RockstarId: ").Append(RockstarId).Append("\n");
            sb.Append("  EpicGamesId: ").Append(EpicGamesId).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
