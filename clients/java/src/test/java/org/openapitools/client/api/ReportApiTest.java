/*
 * PlayPact API
 * The API for PlayPact.
 *
 * The version of the OpenAPI document: v1
 * Contact: contact@playpact.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiException;
import org.openapitools.client.model.CreateMyReportDto;
import org.openapitools.client.model.MyReportDto;
import org.openapitools.client.model.MyReportListDto;
import org.openapitools.client.model.ReportDto;
import org.openapitools.client.model.ReportListDto;
import java.util.UUID;
import org.openapitools.client.model.VerdictDto;
import org.openapitools.client.model.VerdictListDto;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for ReportApi
 */
@Disabled
public class ReportApiTest {

    private final ReportApi api = new ReportApi();

    /**
     * Creates a report.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void createMyReportTest() throws ApiException {
        CreateMyReportDto createMyReportDto = null;
        api.createMyReport(createMyReportDto);
        // TODO: test validations
    }

    /**
     * Deletes a report.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void deleteReportTest() throws ApiException {
        UUID playpactReportId = null;
        api.deleteReport(playpactReportId);
        // TODO: test validations
    }

    /**
     * Gets your report.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getMyReportTest() throws ApiException {
        UUID playPactReportId = null;
        MyReportDto response = api.getMyReport(playPactReportId);
        // TODO: test validations
    }

    /**
     * Gets all reports.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getMyReportsTest() throws ApiException {
        UUID playPactUserId = null;
        List<MyReportListDto> response = api.getMyReports(playPactUserId);
        // TODO: test validations
    }

    /**
     * Gets a report.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getReportTest() throws ApiException {
        UUID playPactReportId = null;
        ReportDto response = api.getReport(playPactReportId);
        // TODO: test validations
    }

    /**
     * Gets all reports.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getReviewReportsTest() throws ApiException {
        UUID playPactReviewerId = null;
        List<ReportListDto> response = api.getReviewReports(playPactReviewerId);
        // TODO: test validations
    }

    /**
     * Gets a verdict.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getVerdictTest() throws ApiException {
        UUID playPactReportId = null;
        VerdictDto response = api.getVerdict(playPactReportId);
        // TODO: test validations
    }

    /**
     * Gets all reports.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getVerdictsTest() throws ApiException {
        UUID playPactUserId = null;
        List<VerdictListDto> response = api.getVerdicts(playPactUserId);
        // TODO: test validations
    }

    /**
     * Updates a report.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void updateMyReportTest() throws ApiException {
        UUID playPactUserId = null;
        MyReportDto myReportDto = null;
        api.updateMyReport(playPactUserId, myReportDto);
        // TODO: test validations
    }

}
