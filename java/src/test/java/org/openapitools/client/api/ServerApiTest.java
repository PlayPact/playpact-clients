/*
 * PlayPact API
 * The API for PlayPact.
 *
 * The version of the OpenAPI document: v1
 * Contact: contact@playpact.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiException;
import org.openapitools.client.model.CreateMyServerDto;
import org.openapitools.client.model.MyServerDto;
import org.openapitools.client.model.MyServerListDto;
import org.openapitools.client.model.ServerDto;
import org.openapitools.client.model.ServerListDto;
import java.util.UUID;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for ServerApi
 */
@Disabled
public class ServerApiTest {

    private final ServerApi api = new ServerApi();

    /**
     * Creates a server.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void createServerTest() throws ApiException {
        UUID playPactUserId = null;
        CreateMyServerDto createMyServerDto = null;
        api.createServer(playPactUserId, createMyServerDto);
        // TODO: test validations
    }

    /**
     * Deletes a server.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void deleteServerTest() throws ApiException {
        UUID playPactUserId = null;
        UUID playPactServerId = null;
        api.deleteServer(playPactUserId, playPactServerId);
        // TODO: test validations
    }

    /**
     * Gets a server.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getMyServerTest() throws ApiException {
        UUID playPactServerId = null;
        MyServerDto response = api.getMyServer(playPactServerId);
        // TODO: test validations
    }

    /**
     * Gets all servers created by an user.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getMyServersTest() throws ApiException {
        UUID playPactUserId = null;
        List<MyServerListDto> response = api.getMyServers(playPactUserId);
        // TODO: test validations
    }

    /**
     * Gets a server.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getServerTest() throws ApiException {
        UUID playPactServerId = null;
        ServerDto response = api.getServer(playPactServerId);
        // TODO: test validations
    }

    /**
     * Gets all servers.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getServersTest() throws ApiException {
        List<ServerListDto> response = api.getServers();
        // TODO: test validations
    }

    /**
     * TODO: Updates the metadata of a server.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void updateMetaDataTest() throws ApiException {
        api.updateMetaData();
        // TODO: test validations
    }

    /**
     * Updates a server.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void updateMyServerTest() throws ApiException {
        String playPactServerId = null;
        MyServerDto myServerDto = null;
        api.updateMyServer(playPactServerId, myServerDto);
        // TODO: test validations
    }

}
